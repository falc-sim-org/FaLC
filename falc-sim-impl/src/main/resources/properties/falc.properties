#
# Maximum execution threads used for (save universe, relocation, run indicators, distances, ...)
# Recommendation is to use value between 1x - 2x number of CPU cores
app.maximum.threads=4

# Switch on/off for start FALC in process scenarios mode
# falc will starts single run with defined settings or starts all active scenarios modeled in "falc.scenarios.xml" file
# XML file will holds just differences against current settings or default tables
falc.run.scenarios=false
falc.scenarios.xml=properties/falcScenarios.xml
#properties/falcScenarios.xml

#
## FaLC populate and save to database information about transport networks. If allowed, it will run as second function.
run.populateDistances=false
#
# XML file with network sources
dist.source.file=properties/networksDefinitions.xml
# Constants for populate distances
# Define maximal speed of bicycle transport in KM/H
dist.bicycle.maxSpeed=15
# Filter out following link types delimited with ","
dist.bicycle.linkFilter=motorway,motorway_link

# Default distance in KM, used when no connection exists between locations
dist.default.distance=100
# Default time in minutes, used when no connection exists between locations
dist.default.time=99

# Default distance in KM and time in minutes inside location according to resident (taken from base_data table)
# for all kind of transport
dist.car.dii.default.values=0:2;5000:3;30000:5;100000:10
dist.car.tii.default.values=0:2;5000:3;30000:5;100000:10

dist.public.dii.default.values=0:2;5000:3;30000:5;100000:10
dist.public.tii.default.values=0:3;5000:4;30000:7;100000:15

dist.bicycle.dii.default.values=0:2;5000:3;30000:5;100000:10
dist.bicycle.tii.default.values=0:8;5000:12;30000:20;100000:45

#
# FaLC populate and save to database initial state of universe and history. If allowed, it will run as third function.
# run.universe.history must be switch on to save also initial state to history.
run.synthese=false

# Generate locations subsets. If allowed, it will run as sixth function.
# In current implementation, subsets are precalculated in public.location_subset_development table for 50 years
# Columns of locations_zones table are overwritten at the start of each year
run.generate.locations.subset=false

#
# Calculate universe. If allowed, it will run as seventh function.
run.universe=false
run.universe.population.subschema=year2000_synthese_template
# Path to XML with per year definition of distance tables
run.universe.distance.evolution.xml=properties/distanceDefinitions.xml

# Define how many years of universe will be calculated
run.universe.years=1
# Define if universe will be saved at the end of calculation
run.universe.final.save=false

#
# Reference runs settings
# Switch on/off running universe several times
run.universe.reference.runs=false

# If set, random generator will be initialized to this value at the beginning of each reference run
# Fri, 13 June 2014
#run.universe.reference.runs.random.generator.seed=20140613
run.universe.reference.runs.random.generator.seed=
run.universe.use.random.managed.by.ID=false

# Define how many times universe will be recalculated
run.universe.reference.runs.from.cycle=
run.universe.reference.runs.to.cycle=1
# Switch on/off auto selection of the best reference run at the end of calculation. FALC will copy it to main universe
run.universe.reference.runs.copy.best.cycle=true
run.universe.reference.runs.copy.best.cycle.population.name=results01
run.universe.reference.runs.copy.best.cycle.clean.universe=false

# Define database schema for store final state of each reference run
run.universe.reference.runs.schema=referenceruns
# Switch on/off calculation average run indicators
run.universe.reference.runs.statistics=false
run.universe.reference.runs.statistics.avg=false
run.universe.reference.runs.statistics.min=false
run.universe.reference.runs.statistics.max=false
run.universe.reference.runs.statistics.median=false

## Set value to TRUE to enable recalculate accessibility variables each year
run.yearly.calculate.accessibility.variables=false

##
## Properties for run service modules 
##
#
# Switch on/off immigration
run.module.migrationOn=true
# Switch on/off migration
run.module.control_totals_residentsOn=false
# Switch on/off demography (born and die)
run.module.demographyOn=true
# Switch on/off households separation
run.module.hhSeparationOn=true
# Switch on/off households formation
run.module.hhFormationOn=true
# Switch on/off close and open companies
run.module.firmographyOn=true
# Switch on/off quitting employees
run.module.quittingEmplOn=true
# Switch on/off joining employees
run.module.joiningEmplOn=true
# Switch on/off relocation households and companies
run.module.relocationHouseholdsOn=true
run.module.relocationBusinessesOn=true

module.demography.maxAge = 94
module.demography.dieAtMaxAge.probability = 0.33
module.demography.motherMaxAge = 49
module.demography.motherMinAge = 15
module.demography.genderBoy.probability = 0.5

module.migration.datalevel=1
module.migration.genderBoy.probability=0.5

module.controlTotal.datalevel=2

# Switch on/off relocation of households created in current year
module.relocation.new.households=false
# Switch on/off for Allow households to choose their current location from RIPIS
module.relocation.households.select.current.location=true
# Switch ON/OFF relocation rate factor applied to household probability during relocation
module.relocation.rate.factor.households.active=false
# Switch on/off relocation of companies created in current year
module.relocation.new.companies=false
# Switch on/off for Allow companies to choose their current location from RIPIS
module.relocation.companies.select.current.location=false
module.relocation.rate.factor.businesses.active=false
module.relocation.limit_gt_gmz=50000
## Switch ON/OFF land limit restrictions during relocation
module.relocation.landlimit.active=true
#
## With TRUE value, land usage will be recalculated each time when household or business will move
## With FALSE value, land usage will be calculated only at the begin and end of the year
module.relocation.landlimit.calculate.each.move=true
# Value defines size of probability interval of fully used location in location choose model
module.relocation.landlimit.probability.interval=0.0000001
# Switch ON/OFF sublocation restrictions during relocation
module.relocation.sublocation.active=true
# Define minimal distance used by relocation model
module.relocation.min.distance=2
# Define maximal distance used by relocation model, zero means no limit
module.relocation.max.distance=100
# Switch ON/OFF location growth restrictions during relocation
module.relocation.locationmaxgrowth.active=true


##
## Properties for run indicators 
##
#
# Switch on/off run indicators export
run.indicators.active=true

#
# Set level of export, default is 2
# 1-minimal = properties, R2, average (if defined)
# 2-calibration = plus all_calibration.csv, this is default
# 3-extended = sublocations.csv (plus years.csv, all.csv are obsolete)
# 4-full = plus relocation status, RIPIS export (if defined)
# other values are takes as default value
run.indicators.export.level=2
#
## Directory where run indicators are stored
run.indicators.folder=/_FaLC_results/
#
## Description used for next run indicators
run.indicators.description=FaLC-simulation
run.indicators.extra.description=Detailed exported run indicators description 
#
# Switch on/off export of relocation RIPIS intervals
run.indicators.export.relocation.ripis.intervals.bussineses=false
run.indicators.export.relocation.ripis.intervals.households=false
# Locations filter for RIPIS export
run.indicators.export.relocation.ripis.intervals.locations=3001,3002,3003,3004,3005,3006,3007,3021,3022,3023,3024,3025,3031,3032,3033,3034,3035,3036,3037,3038,3101,3102,3103,3104,3105,3111,3201,3202,3204,3211,3212,3213,3214,3215,3216,3217,3218,3219,3231,3232,3233,3234,3235,3236,3237,3238,3251,3252,3253,3254,3255,3256,3271,3272,3273,3274,3275,3276,3291,3292,3293,3294,3295,3296,3297,3298,3311,3312,3313,3314,3315,3316,3331,3332,3333,3334,3335,3336,3337,3338,3339,3351,3352,3354,3355,3356,3357,3371,3372,3373,3374,3375,3376,3377,3391,3392,3393,3394,3401,3402,3403,3405,3406,3407,3408,3421,3422,3423,3424,3425,3426,3441,3442,3443,3444,320301,320302,320303
run.indicators.export.relocation.ripis.intervals.cantons=15,16,17


# export additional 5 rows with file info at top of each file
run.indicators.export.print.header.rows=true

run.indicators.Overview.active=true
# empty means all runs, number X means first X runs
run.indicators.Overview.runs.filter=
# empty means all years, or use coma delimited string. Example 2008,2010 - means export these two years
run.indicators.Overview.years.filter=
# export on location level with filter
run.indicators.Overview.locations=true
run.indicators.Overview.location.filter=
# export on municipalities level with filter
run.indicators.Overview.municipalities=true
run.indicators.Overview.municipalities.filter=
# export on cantons level with filter
run.indicators.Overview.cantons=false
run.indicators.Overview.cantons.filter=
# switch export single file for each year or all years in one file
run.indicators.Overview.all_year_single_file=true

run.indicators.GIS.active=true
run.indicators.GIS.runs.filter=
run.indicators.GIS.years.filter=
run.indicators.GIS.locations=true
run.indicators.GIS.location.filter=
run.indicators.GIS.municipalities=false
run.indicators.GIS.municipalities.filter=
run.indicators.GIS.cantons=false
run.indicators.GIS.cantons.filter=
run.indicators.GIS.all_year_single_file=false

run.indicators.commuters.active=false
run.indicators.commuters.runs.filter=
run.indicators.commuters.years.filter=
run.indicators.commuters.locations=true
run.indicators.commuters.location.filter=
run.indicators.commuters.municipalities=false
run.indicators.commuters.municipalities.filter=
run.indicators.commuters.cantons=false
run.indicators.commuters.cantons.filter=
run.indicators.commuters.all_year_single_file=false

run.indicators.Businesses.active=true
run.indicators.Businesses.runs.filter=
run.indicators.Businesses.years.filter=
run.indicators.Businesses.locations=true
run.indicators.Businesses.location.filter=
run.indicators.Businesses.municipalities=false
run.indicators.Businesses.municipalities.filter=
run.indicators.Businesses.cantons=false
run.indicators.Businesses.cantons.filter=
run.indicators.Businesses.all_year_single_file=true

run.indicators.BusinessesTypes.active=true
run.indicators.BusinessesTypes.runs.filter=
run.indicators.BusinessesTypes.years.filter=
run.indicators.BusinessesTypes.locations=true
run.indicators.BusinessesTypes.location.filter=
run.indicators.BusinessesTypes.municipalities=false
run.indicators.BusinessesTypes.municipalities.filter=
run.indicators.BusinessesTypes.cantons=false
run.indicators.BusinessesTypes.cantons.filter=
run.indicators.BusinessesTypes.all_year_single_file=true

run.indicators.Households.active=true
run.indicators.Households.runs.filter=
run.indicators.Households.years.filter=
run.indicators.Households.locations=true
run.indicators.Households.location.filter=
run.indicators.Households.municipalities=false
run.indicators.Households.municipalities.filter=
run.indicators.Households.cantons=false
run.indicators.Households.cantons.filter=
run.indicators.Households.all_year_single_file=true

run.indicators.Persons.active=true
run.indicators.Persons.runs.filter=
run.indicators.Persons.years.filter=
run.indicators.Persons.locations=true
run.indicators.Persons.location.filter=
run.indicators.Persons.municipalities=false
run.indicators.Persons.municipalities.filter=
run.indicators.Persons.cantons=false
run.indicators.Persons.cantons.filter=
run.indicators.Persons.all_year_single_file=true

run.indicators.Relocation.active=false
run.indicators.Relocation.runs.filter=
run.indicators.Relocation.years.filter=
run.indicators.Relocation.cumulated=false
run.indicators.Relocation.locations=true
run.indicators.Relocation.location.filter=
run.indicators.Relocation.municipalities=false
run.indicators.Relocation.municipalities.filter=
run.indicators.Relocation.cantons=false
run.indicators.Relocation.cantons.filter=
run.indicators.Relocation.all_year_single_file=true

run.indicators.LocationsZones.active=true
run.indicators.LocationsZones.runs.filter=1
run.indicators.LocationsZones.years.filter=
run.indicators.LocationsZones.locations=true
run.indicators.LocationsZones.location.filter=
run.indicators.LocationsZones.all_year_single_file=false

run.indicators.RunInfo.active=true
run.indicators.RunInfo.runs.filter=
run.indicators.RunInfo.years.filter=
run.indicators.RunInfo.all_year_single_file=true

#
## Property file for utility functions
##
#
# Define if location choice from RIPIS will be managed by PersonID or randomly 
utility.location.choice.managed.by.ID=false

#
# Path to XML with with definition of utility functions, coefficients and parameters
utility.relocation.source.xml.path=properties/SampleXml/utilityFunctions.xml

#
##
## Properties for locations subset generator 
## Subset for households and businesses relocation can have different conditions
#
# All location in inner circle are selected to subset
subset.generate.years=50
subset.innercircle.km=25
# raised from 0.9 --> 1.0 on 16.09.14
subset.innercircle.probability=1
# Location in outer circle are selected with probability
subset.outercircle.km=50
subset.outercircle.probability=0.5
# Any location with type aglomeration is selected with probability
subset.aglomeration.households.probability=0.1
subset.aglomeration.businesses.probability=0.1
# Any location with type bigcity is selected with probability
# for hh and bus raised from 0.1 --> 0.5 on 16.09.14 
subset.bigcities.households.probability=0.5
subset.bigcities.businesses.probability=0.5
# Any location with connection to motorway is selected with probability
subset.motorwayaccess.households.km=30
subset.motorwayaccess.businesses.km=50
subset.motorwayaccess.households.probability=0.1
subset.motorwayaccess.businesses.probability=0.1	
# Locations defined in filter will not be part of any generated subset
subset.filter.households=9050,9051,9052,9053,9054
subset.filter.business=

##
##	Properties for running Demographics change
##
#
# Select detail level of source data in CSV table: 1- CH, 2- Canton, 3- Municipality, 4- Location
#demography.migration.datalevel=2

#
# Selected male partner must pass this probability to start search for female partner
demography.hhformation.probability=0.1
#
# Person must pass minimal age check to be selected as one of partners
demography.hhformation.minage=17


##
##	Properties for running Firmography universe
##
#
# Max number of employees for small company
business.maximal.employment.level=0.95
#
# Max number of employees for small company
business.small.company.max.employees=4
#
# Max number of employees for big company
business.big.company.max.employees=20
#
# Probability to create small company
business.small.company.creation.probability=0.66
#
# Maximum duration of job, then people automatically quit job
business.maximum.job.duration=30
#
# Age borders for CEO and employees
business.minimum.job.age=18
business.maximum.job.age=64
business.minimum.ceo.age=40
business.maximum.ceo.age=64
#
# Additional percentage for growing companies, or minimal if base is less or equal to 0
# Base is growth of workage people
business.growth.percentage=1


##
##	Properties for calculate Accessibility variables
##
#
# Evaluate only locations for limit in max distance [km]
accessibility.variables.distance.limit=50
#
# Constant in accessibility variable evaluation
accessibility.variables.beta=-0.2
#
# Aproximation of time within the location i (#residents:value;...)
# old values 0:4;5000:7;30000:10;100000:15
accessibility.variables.tii.intervals=0:2;5000:3;30000:5;100000:10

#
# Store access variable as sum of logarithm
accessibility.variables.apply.math.log=false
#
# Replace negative values for AV_X columns in location table with default value
accessibility.variables.min.value=0.001


##
##	Properties for synthesis
#
# Filter for cantons used in synthesis
# Example:
#     " where locationId in (15,16,17)": only cantons 15,16,17 will be populated and calculated
# Default(empty value):
#     all locations in location_zones table
syn.cantonsFilter=
# (15,16,17,18)
# (1,5,8,15,16,17,18,20)
#
# Synthesis start year
syn.theYear=2010

## 	Definition of source schema, table and key column for synthesis
#
syn.data_tables=assumptions/base_data_synthetic_population
#marginal_totals_base_year
syn.locid_str=locid

##
##	Properties for entropy
##
entropy.numStep=3
entropy.parameter1=0.15
entropy.saveOption=1

data.dateFormat=dd-MM-yyyy
data.timestampFormat=dd-MM-yyyy HH:mm:ss
data.csv.path=/falcsim/
data.csv.defaultSchema=assumptions
data.csv.networksSchema=networks
data.csv.distancesSchema=distances
data.csv.columnsSeparator=;
data.csv.decimalSeparator=.
data.csv.schemaDelimiter=/
data.csv.charset=UTF-8
data.csv.tableExtension=.csv
data.csv.columnDefinitionExtension=.csvt
data.csv.temporaryTableExtension=.tmp

# save path to CSV file
dist.saveRoute=false
# save path to CSV delimiter
dist.saveRouteDelimiter=;
# save path to SHP file
dist.saveRouteSHP=false
# save used network to SHP file
dist.network.used=false
# path to save routes
dist.saveRoutePath=c:/temp/
# limit saving routes for this locations, delimited with ","
dist.saveRouteFromIdLoc=3001

dist.save.spider.shapefiles=false
dist.distances.unit=meter
dist.time.unit=minute
dist.decimal.places=2

